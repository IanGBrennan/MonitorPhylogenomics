td1$Name_in_Tree <- "Varanus.glebopalma"; td1$color <- "#243D98"
td2 <- filter(tempdist, time == -14.8 & Name_in_Tree == "n40")
td3 <- filter(tempdist, time == -10.4 & Name_in_Tree == "Varanus.glebopalma")
td4 <- filter(tempdist, time == -10.4 & Name_in_Tree == "n43")
td4$Name_in_Tree <- "n40"; td4$color <- "#F3FAC0"
#for (k in 1:length(geo.object$geography.object)) {
thedist <- NULL
for (k in 1:10) {
current.time <- round(max(plot.times) - plot.times[[k+1]],digits=1)
time.minus1  <- round(max(plot.times) - plot.times[[k]],digits=1)
#print(paste("plotting distributions at", current.time, "time units ago"))
taxa.to.plot <- NULL
extant.names <- rownames(geo.object$geography.object[[k]])
## THIS DOESN'T YET WORK BECAUSE I NEED TO RECONCILE THE RPANDA NAMES (.AAA, .AAB)
## WITH THE NODE NAMES I'VE GIVEN THEM (n67, n68)
## I SHOULD BE ABLE TO DO THIS STEALING SCRIPT FROM CreateGeoObject_SP
#  for (j in 1:length(extant.names)){
#    current.taxon <- filter(alldist, Name_in_Tree == extant.names[[j]])
#    current.taxon$time <- current.time
#    taxa.to.plot <- rbind(taxa.to.plot, current.taxon)
#  }
## I THINK I CAN JUST USE THE CODE I STOLE FROM tree.through.time.R
for (j in 1:length(extant.names)) {
if(extant.names[[j]] %in% phy$tip.label){
current.taxon <- filter(alldist, Name_in_Tree == extant.names[[j]])
current.taxon$time <- -current.time
current.taxon$color <- subset(colorz, names(colorz) == extant.names[[j]])
#taxa.to.plot <- rbind(taxa.to.plot, filter(distribution.data, Name_in_Tree == extant.names[[j]]))
taxa.to.plot <- rbind(taxa.to.plot, current.taxon)
# I added this bit as a potential resolution, but it didn't work how I thought it would
#  ancestor <- paste0("n", geo.object$name.matrix[which(geo.object$name.matrix[,2]==extant.names[[j]]),1])
#  ancestor.taxon <- filter(rase.input$DistData, Name_in_Tree == ancestor)[,1:3]
#  ancestor.taxon$time <- -time.minus1
#  ancestor.taxon$color <- subset(colorz, names(colorz) == extant.names[[j]])
#  taxa.to.plot <- rbind(taxa.to.plot, ancestor.taxon)
#  print(paste("k=",k, "j=",j))
}
else if(!extant.names[[j]] %in% phy$tip.label) {
node.name <- paste0("n", geo.object$name.matrix[which(geo.object$name.matrix[,2]==extant.names[[j]]),3])
#node.name <- paste0("n",node.name)
current.taxon <- filter(rase.input$DistData, Name_in_Tree == node.name)[,1:3]
current.taxon$time <- -current.time
current.taxon$color <- subset(colorz, names(colorz) == node.name)
taxa.to.plot <- rbind(taxa.to.plot, current.taxon)
# I added this bit as a potential resolution, but it didn't work how I thought it would
#  ancestor <- paste0("n", geo.object$name.matrix[which(geo.object$name.matrix[,2]==extant.names[[j]]),1])
#  if(ancestor == paste0("n", Ntip(phy))){
#    ancestor.taxon <- filter(rase.input$DistData, Name_in_Tree == paste0("n",(Ntip(phy)+1)) | Name_in_Tree == paste0("n",(Ntip(phy)+2)))[,1:3]
#    }
#  else if(!ancestor == paste0("n", Ntip(phy))) {
#    ancestor.taxon <- filter(rase.input$DistData, Name_in_Tree == ancestor)[,1:3]
#  }
#  ancestor.taxon$Name_in_Tree <- ancestor
#  ancestor.taxon$time <- -time.minus1
#  ancestor.taxon$color <- subset(colorz, names(colorz) == ancestor)
#  taxa.to.plot <- rbind(taxa.to.plot, ancestor.taxon)
#  #print(paste("k=",k, "j=",j))
} else {
stop("current taxon does not have distributional data")
}
}
thedist <- rbind(thedist, taxa.to.plot)
}
#thedist$time <- -thedist$time
head(thedist); tail(thedist)
### Below this is just a test of the method
tempdist <- thedist
td1 <- filter(tempdist, time == -14.8 & Name_in_Tree == "n35")
td1$Name_in_Tree <- "Varanus.glebopalma"; td1$color <- "#243D98"
td2 <- filter(tempdist, time == -14.8 & Name_in_Tree == "n40")
td3 <- filter(tempdist, time == -10.4 & Name_in_Tree == "Varanus.glebopalma")
td4 <- filter(tempdist, time == -10.4 & Name_in_Tree == "n43")
td4$Name_in_Tree <- "n40"; td4$color <- "#F3FAC0"
testdist <- rbind(td1, td2, td3, td4)
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), alpha = 0.3, bins = 4,
geom = "polygon", data = testdist) + theme(legend.position = 'none') +
labs(title="Time: {closest_state}") + # this will label the plot by the groupings
transition_states(time, transition_length=5, state_length=3) +
ease_aes('cubic-in-out')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude), alpha = 0.3, bins = 4,
geom = "polygon", data = testdist) + theme(legend.position = 'none') +
labs(title="Time: {closest_state}") + # this will label the plot by the groupings
transition_states(time, transition_length=5, state_length=3) +
ease_aes('cubic-in-out')
goanna.rase$OWin[[1]]
goanna.rase$DistData[[1]]
ggamp(rangemap) +
geom_polygon(data=fortify(filter(goanna.rase$DistData, Name_in_Tree == "n35")))
ggmap(rangemap) +
geom_polygon(data=fortify(filter(goanna.rase$DistData, Name_in_Tree == "n35")))
head(goanna.rase$DistData)
ggmap(rangemap) +
geom_polygon(data=fortify(filter(goanna.rase$DistData, Name_in_Tree == "n35")),
aes(x=Longitude, y=Latitude))
str(goanna.rase)
goanna.rase$ConvexHulls[[1]]
plot(goanna.rase$ConvexHulls[[1]])
fortify(goanna.rase$ConvexHulls[[1]])
ggmap(rangemap) +
geom_polygon(data=fortify(goanna.rase$ConvexHulls[[1]]),
aes(x=Longitude, y=Latitude))
ggmap(rangemap) +
geom_polygon(data=fortify(goanna.rase$ConvexHulls[[1]]),
aes(x=long, y=lat))
ggmap(rangemap) +
geom_polygon(data=fortify(goanna.rase$OWin[[1]]),
aes(x=long, y=lat))
goanna.rase$ConvexHulls[[1]]
goanna.rase$ConvexHulls[[1]]$buffer
extent(goanna.rase$ConvexHulls[[1]])
extent(goanna.rase$ConvexHulls[[1]])[[1]]
extent(goanna.rase$ConvexHulls[[1]])[1]
extent(goanna.rase$ConvexHulls[[1]])[2]
ggmap(rangemap) +
geom_polygon(data=fortify(goanna.rase$OWin[[1]]),
aes(x=long, y=lat))
ggmap(rangemap) +
geom_polygon(data=fortify(goanna.rase$ConvexHulls[[1]]),
aes(x=long, y=lat))
fortify(goanna.rase$ConvexHulls[[1]])
tail(fortify(goanna.rase$ConvexHulls[[1]]))
ggmap(rangemap) +
geom_polygon(data=fortify(goanna.rase$ConvexHulls[[1]]),
aes(x=long, y=lat))
class(goanna.rase$ConvexHulls[[1]])
ggplot(fortify(goanna.rase$ConvexHulls[[1]]), aes(long, lat, group = group)) +
geom_polygon(aes(fill = piece))
ggmap(rangemap) +
geom_polygon(aes(fill = piece, x = long, y = lat, group = group),
data = fortify(goanna.rase$ConvexHulls[[1]]),
alpha = 0.8,
color = "black",
size = 0.2)
head(fortify(goanna.rase$ConvexHulls[[1]]))
ggmap(rangemap) +
geom_polygon(aes(fill = piece, x = lat, y = long, group = group),
data = fortify(goanna.rase$ConvexHulls[[1]]),
alpha = 0.8,
color = "black",
size = 0.2)
ggplot(fortify(goanna.rase$ConvexHulls[[1]]), aes(lat, long, group = group)) +
geom_polygon(aes(fill = piece))
ggmap(rangemap) +
geom_polygon(data=fortify(goanna.rase$ConvexHulls[[1]]),
aes(x=lat, y=long))
### Below this is just a test of the method
tempdist <- thedist
td1 <- filter(tempdist, time == -14.8 & Name_in_Tree == "n35")
td1$Name_in_Tree <- "Varanus.glebopalma"; td1$color <- "#243D98"
td2 <- filter(tempdist, time == -14.8 & Name_in_Tree == "n40")
td3 <- filter(tempdist, time == -10.4 & Name_in_Tree == "Varanus.glebopalma")
td4 <- filter(tempdist, time == -10.4 & Name_in_Tree == "n43")
td4$Name_in_Tree <- "n40"; td4$color <- "#F3FAC0"
testdist <- rbind(td1, td2, td3, td4)
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude), alpha = 0.3, bins = 4,
geom = "polygon", data = testdist) + theme(legend.position = 'none') +
labs(title="Time: {closest_state}") + # this will label the plot by the groupings
transition_states(time, transition_length=5, state_length=3) +
ease_aes('cubic-in-out')
10:1
1:10
stat_density2d
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) + theme(legend.position = 'none') +
### Below this is just a test of the method
tempdist <- thedist
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) + theme(legend.position = 'none')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) + theme(legend.position = 'none')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) +
theme(legend.position = 'none') +
scale_fill_manual(values = colorz)
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) +
theme(legend.position = 'none') +
scale_fill_manual(values = "blue")
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) +
theme(legend.position = 'none') +
scale_color_manual(values = "blue")
head(thedist)
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) +
scale_color_manual(values = "blue") +
theme(legend.position = 'none')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill=Name_in_Tree), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) +
scale_color_manual(values = "blue") +
theme(legend.position = 'none')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill=Name_in_Tree), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = filter(alldist, Name_in_Tree == "Varanus.glebopalma")) +
scale_fill_manual(values = "blue") +
theme(legend.position = 'none')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = thedist) + theme(legend.position = 'none') +
scale_fill_manual(values = colorz)
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), # using 'fill = color' breaks the smooth transitions
alpha = 0.3, bins = 4,
geom = "polygon", data = thedist) + theme(legend.position = 'none') +
scale_fill_manual(values = colorz) +
labs(title="Time: {closest_state}") + # this will label the plot by the groupings
transition_states(time, transition_length=5, state_length=3) +
ease_aes('cubic-in-out')
head(thedist)
tail(thedist)
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), alpha = 0.3, bins = 4,
geom = "polygon", data = testdist) + theme(legend.position = 'none') +
labs(title="Time: {closest_state}") + # this will label the plot by the groupings
transition_states(time, transition_length=5, state_length=3) +
ease_aes('cubic-in-out')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), alpha = 0.3, bins = 4,
geom = "polygon", data = testdist) + theme(legend.position = 'none') +
scale_fill_manual(values = colorz) +
labs(title="Time: {closest_state}") + # this will label the plot by the groupings
transition_states(time, transition_length=5, state_length=3) +
ease_aes('cubic-in-out')
ggmap(rangemap) +
stat_density2d(aes(x = Longitude, y = Latitude, fill = color), alpha = 0.3, bins = 4,
geom = "polygon", data = testdist) + theme(legend.position = 'none') +
scale_fill_manual(values = unique(testdist$color)) +
labs(title="Time: {closest_state}") + # this will label the plot by the groupings
transition_states(time, transition_length=5, state_length=3) +
ease_aes('cubic-in-out')
getMRCA(oz.g$phy, c("Varanus.acanthurus.acanthurus", "Varanus.acanthurus.baritji"))
oz.g$phy
getMRCA(oz.g$phy, c("Varanus.acanthurus.acanthurus", "Varanus.acanthurus.baritji"))
mrca(oz.g$phy, full=TRUE)
getMRCA(oz.g$phy, c("Varanus.glebopalma", "Varanus.gilleni"))
getMRCA(oz.g$phy, c("Varanus.acanthurus.acanthurus", "Varanus.baritji"))
acantree <- extract.clade(oz.g$phy, node=43)
plot(acantree)
is.ultrametric(acantree)
mrca(acantree)
# Working through the Goannas and Marsupials
goanna.tree <- read.tree("~/Documents/GitHub/MonitorPhylogenomics/CoEvo_Goanna.tre")
plot(goanna.tree)
max(nodeHeight(goanna.tree))
max(nodeHeights(goanna.tree))
list(ideas = "this is blank", thoughts = "this is also blank")
list(phy = oz.g$phy, data = gf$dat)
goanna.dist <- read.csv("~/Documents/GitHub/MonitorPhylogenomics/CoEvo_Goanna_Distributions.csv", header=T)
goanna.dist
# Read in the Distribution Data
goanna.dist <- read.csv("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Goanna_Distributions.csv", header=T)
goanna.dist
goanna.tree
rase.tree
rase.tree <- read.tree("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Goanna.tre")
rase.tree
goanna.tree
all.data
all.data <- read.csv("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/Goanna.Marsupial.Data.csv", header=T)
goanna.data
goanna.data <- filter(all.data, group == "Monitor")
goanna.data <- filter(all.data, Group == "Monitor")
goanna.data
rase.tree$tip.label
distribution.data
# Read in the Distribution Data
goanna.dist <- read.csv("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Goanna_Distributions.csv", header=T)
head(goanna.dist)
goanna.dist <- read.csv("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Goanna_Distributions.csv", header=T)
unique(rase.tree$tip.label)
unique(all.data$Name_in_Tree)
unique(goanna.data$Name_in_Tree)
unique(goanna.dist$Name_in_Tree)
rase.tree$tip.label
sort(rase.tree$tip.label)
goanna.file <- list(phy = rase.tree, size.data = goanna.data, distribution.data = goanna.dist)
gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Varanus.0.25.RASE.RDS")
unique(gorase$DistData$Name_in_Tree)
goanna.file <- list(phy = rase.tree, size.data = goanna.data, distribution.data = goanna.dist, rase.data = gorase)
saveRDS(goanna.file, file="~/Documents/GitHub/MonitorPhylogenomics/Varanus_Walkthrough")
readRDS("~/Documents/GitHub/MonitorPhylogenomics/Goanna_Walkthrough.RDS")
tutorial <- readRDS("~/Documents/GitHub/MonitorPhylogenomics/Goanna_Walkthrough.RDS")
tutorial
levels(tutorial)
class(tutorial)
str(tutorial)
names(tutorial)
tutorial$rase.data$OWin[[1]]
head(tutorial$distribution.data)
head(tutorial$distribution.data)
tips <- plot.distmaps(tutorial$distribution.data, new.directory = NULL, point.width = 0.25)
head(tips$SpatialPoints$Varanus.eremius)
plot(tips$ConvexHulls$Varanus.eremius)
plot(tips$OWin$Varanus.eremius)
sbbox <- make_bbox(lon = goanna.dist$Longitude, lat = goanna.dist$Latitude, f = .1)
sq_map <- get_stamenmap(bbox = sbbox, zoom = 3, maptype = "toner")
fortified.data <- fortify(tips$ConvexHulls$Varanus.eremius)
print((ggmap(sq_map)
+ geom_point(data = filter(goanna.dist, Name_in_Tree == "Varanus.eremius"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
# these are the objects in the rase list
names(tutorial$rase.data)
# get the node number for the MRCA of V.gilleni and V.bushi
getMRCA(tutorial$phy, c("Varanus.gilleni", "Varanus.bushi"))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
plot(goanna.rase$ConvexHulls$n43)
head(tutorial$rase.data$DistData)
# get the node number for the MRCA of V.gilleni and V.bushi
getMRCA(tutorial$phy, c("Varanus.gilleni", "Varanus.bushi"))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
# get the node number for the MRCA of V.gilleni and V.bushi
getMRCA(tutorial$phy, c("Varanus.gilleni", "Varanus.bushi"))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Latitude, y=Longitude), color="tomato3", size=5, alpha=0.5)))
plot(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"))
Longitude
filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")
plot(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")[,2:3])
plot(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")[,3:2])
# get the node number for the MRCA of V.gilleni and V.bushi
getMRCA(tutorial$phy, c("Varanus.gilleni", "Varanus.bushi"))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Latitude, y=Longitude), color="tomato3", size=5, alpha=0.5)))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Latitude, y=Longitude), color="tomato3", size=5, alpha=0.5)))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")
)
fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")[,2:3])
print((ggmap(sq_map)
+ geom_point(data = fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")[,2:3]),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")[,3:2]),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
tutorial$rase$SpatialPoints$n32
plot(tutorial$rase.data$SpatialPoints$n32)
plot(tutorial$rase.data$SpatialPoints$n43)
plot(tutorial$phy)
# get the node number for the MRCA of V.gilleni and V.bushi
getMRCA(tutorial$phy, c("Varanus.primordius", "Varanus.kingorum"))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
plot(goanna.rase$ConvexHulls$n41)
print((ggmap(sq_map)
+ geom_point(data = fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n42")[,2:3]),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n41")[,2:3]),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
goanna.rase.raw <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/Varanus_RASE_res.RDS")
head(goanna.rase.raw)
nrow(goanna.rase.raw)
# extract and plot the MCMC output
resmc <- mcmc(goanna.rase.raw, start=(length(res[,1])*.2)) # remove 20% as burnin
library(coda)
# extract and plot the MCMC output
resmc <- mcmc(goanna.rase.raw, start=(length(res[,1])*.2)) # remove 20% as burnin
res
tree_poly
length(tree_poly)
goanna.tree
setdiff(goanna.tree$tip.label, names(tree_poly))
goanna.tree <- drop.tip(goanna.tree, tip="Varanus.indicus")
# run the MCMC
res <- rase(goanna.tree, tree_poly, niter=10, logevery = 1)
head(res)
# extract and plot the MCMC output
resmc <- mcmc(res, start=(length(res[,1])*.2)) # remove 20% as burnin
class(res)
class(goanna.rase.raw)
head(goanna.rase.raw)
# extract and plot the MCMC output
resmc <- mcmc(goanna.rase.raw, start=(length(res[,1])*.2)) # remove 20% as burnin
par(mar=c(1,1,1,1))
plot(resmc)
getwd()
# process the rase-output
rase.out <- process.rase(mcmc.object=resmc, new.directory="GoannaMaps_OriginalInternalNodes",
distribution = goanna.dist, remove.extralimital = T, "/Users/Ian/Desktop/Map_ShapeFiles/Australia.shx")
# process the rase-output
rase.out <- process.rase(mcmc.object=resmc, new.directory="GoannaMaps_OriginalInternalNodes",
distribution = goanna.dist, remove.extralimital = T, "~/Google.Drive/R.Analyses/Map_ShapeFiles/Australia.shx")
source("~/Documents/GitHub/MonitorPhylogenomics/plot.distmaps.R")
source("~/Documents/GitHub/MonitorPhylogenomics/plot.distmaps.R")
source("~/Documents/GitHub/MonitorPhylogenomics/process.rase.R")
plot(rase.out$SpatialPoints$n43)
plot(tutorial$rase.data$SpatialPoints$n43)
unique(names(rase.out$SpatialPoints))
unique(names(tutorial$rase.data$SpatialPoints))
plot(rase.out$SpatialPoints$n32)
plot(tutorial$rase.data$SpatialPoints$n32)
head(rase.out$SpatialPoints$n32)
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n32"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
filter(tutorial$rase.data$DistData, Name_in_Tree == "n32")
(ggmap(sq_map)
ggmap(sq_map)
(ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n32"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5))
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n32"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = filter(rase.out$DistData, Name_in_Tree == "n32"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = filter(rase.out$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
saveRDS(res.out, file="/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CORRECT_Goanna0.25.RASE.RDS")
saveRDS(rase.out, file="/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CORRECT_Goanna0.25.RASE.RDS")
# get the node number for the MRCA of V.gilleni and V.bushi
getMRCA(tutorial$phy, c("Varanus.gilleni", "Varanus.bushi"))
# we know it's node 43 ('n43' in my notation), so we can plot the distribution of this ancestor
plot(goanna.rase$ConvexHulls$n41)
#gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Varanus.0.25.RASE.RDS")
gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CORRECT_Goanna0.25.RASE.RDS")
goanna.file <- list(phy = rase.tree, size.data = goanna.data, distribution.data = goanna.dist, rase.data = gorase)
saveRDS(goanna.file, file="~/Documents/GitHub/MonitorPhylogenomics/Varanus_Walkthrough")
tutorial <- readRDS("~/Documents/GitHub/MonitorPhylogenomics/Goanna_Walkthrough.RDS")
# this includes a tree, size data, distribution data, and a processed rase object
names(tutorial)
print((ggmap(sq_map)
+ geom_point(data = fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")[,2:3]),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
#gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Varanus.0.25.RASE.RDS")
gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CORRECT_Goanna0.25.RASE.RDS")
print((ggmap(sq_map)
+ geom_point(data = filter(gorase$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
goanna.file <- list(phy = rase.tree, size.data = goanna.data, distribution.data = goanna.dist, rase.data = gorase)
saveRDS(goanna.file, file="~/Documents/GitHub/MonitorPhylogenomics/Varanus_Walkthrough")
tutorial <- readRDS("~/Documents/GitHub/MonitorPhylogenomics/Goanna_Walkthrough.RDS")
print((ggmap(sq_map)
+ geom_point(data = filter(gorase$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = fortify(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43")[,2:3]),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
head(filter(gorase$DistData, Name_in_Tree == "n43"))
head(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"))
head(filter(rase.out$DistData, Name_in_Tree == "n43"))
rm(gorase)
#gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Varanus.0.25.RASE.RDS")
gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CORRECT_Goanna0.25.RASE.RDS")
goanna.file <- list(phy = rase.tree, size.data = goanna.data, distribution.data = goanna.dist, rase.data = gorase)
saveRDS(goanna.file, file="~/Documents/GitHub/MonitorPhylogenomics/Varanus_Walkthrough")
rm(tutorial)
tutorial <- readRDS("~/Documents/GitHub/MonitorPhylogenomics/Goanna_Walkthrough.RDS")
head(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"))
head(filter(gorase$DistData, Name_in_Tree == "n43"))
#gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CoEvo_Varanus.0.25.RASE.RDS")
gorase <- readRDS("/Users/Ian/Google.Drive/R.Analyses/Varanus_Project/CORRECT_Goanna0.25.RASE.RDS")
goanna.file <- list(phy = rase.tree, size.data = goanna.data, distribution.data = goanna.dist, rase.data = gorase)
saveRDS(goanna.file, file="~/Documents/GitHub/MonitorPhylogenomics/Varanus_Walkthrough")
tutorial
rm(tutorial)
tutorial <- readRDS("~/Documents/GitHub/MonitorPhylogenomics/Varanus_Walkthrough")
head(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"))
tutorial <- readRDS("~/Documents/GitHub/MonitorPhylogenomics/Goanna_Walkthrough.RDS")
print((ggmap(sq_map)
+ geom_point(data = filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"),
mapping = aes(x=Longitude, y=Latitude), color="tomato3", size=5, alpha=0.5)))
head(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"))
rm(tutorial)
tutorial <- readRDS("~/Documents/GitHub/MonitorPhylogenomics/Goanna_Walkthrough.RDS")
# this includes a tree, size data, distribution data, and a processed rase object
names(tutorial)
head(filter(tutorial$rase.data$DistData, Name_in_Tree == "n43"))
